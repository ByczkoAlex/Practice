{"version":3,"sources":["Components/Header/Header.tsx","Components/Search/Search.tsx","Components/Movie/Movie.tsx","appReducer/AppReducer.tsx","Components/App.tsx","reportWebVitals.js","Store/Store.tsx","index.tsx"],"names":["Header","props","className","text","Search","useState","searchValue","setSearchValue","type","value","onChange","e","target","onClick","preventDefault","search","Movie","poster","movie","Poster","Title","width","alt","src","Year","SEARCH_MOVIES_REQUEST","SEARCH_MOVIES_SUCCESS","SEARCH_MOVIES_FAILURE","searchMoviesSuccess","payload","initialState","loading","movies","errorMessage","App","useSelector","state","app","dispatch","useDispatch","useEffect","fetch","then","response","json","jsonResponse","error","Response","Error","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.234f66e1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = (props:any) => {\r\n    return (\r\n        <header className='App-header'>\r\n            <h2>{props.text}</h2>\r\n            <p>Кино - наша страсть!</p>\r\n        </header>\r\n    )\r\n}","import React, {ChangeEvent, MouseEventHandler, useState} from 'react'\r\n\r\nexport const Search = (props:any) => {\r\n\r\n    const [searchValue,setSearchValue] = useState('')\r\n\r\n    const callSearchFunction = (e: any) => {\r\n        e.preventDefault()\r\n        props.search(searchValue)\r\n        setSearchValue('')\r\n    }\r\n\r\n    const handleSearchInputChanges = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form className='search'>\r\n            <input type=\"text\"\r\n                   value={searchValue}\r\n                   onChange={handleSearchInputChanges}\r\n            />\r\n            <input onClick={callSearchFunction} type=\"submit\" value='SEARCH'/>\r\n        </form>\r\n    )\r\n}","import React from \"react\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE =\r\n    \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\n\r\nconst Movie = ( props:any ) => {\r\n    const poster =\r\n        props.movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : props.movie.Poster;\r\n    return (\r\n        <div className=\"movie\">\r\n            <h2>{props.movie.Title}</h2>\r\n            <div>\r\n                <img\r\n                    width=\"200\"\r\n                    alt={`The movie titled: ${props.movie.Title}`}\r\n                    src={poster}\r\n                />\r\n            </div>\r\n            <p>({props.movie.Year})</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Movie;","import React from \"react\";\r\n\r\nconst SEARCH_MOVIES_REQUEST = 'SEARCH_MOVIES_REQUEST'\r\nconst SEARCH_MOVIES_SUCCESS = 'SEARCH_MOVIES_SUCCESS'\r\nconst SEARCH_MOVIES_FAILURE = 'SEARCH_MOVIES_FAILURE'\r\n\r\nexport const searchMoviesSuccess = (payload:any): searchMoviesSuccessActionType => ({type: SEARCH_MOVIES_SUCCESS, payload})\r\nexport type searchMoviesSuccessActionType = {\r\n    type: typeof SEARCH_MOVIES_SUCCESS,\r\n    payload: any\r\n}\r\n\r\nexport const searchMoviesFailure = (error: string): searchMoviesFailureActionType => ({type:SEARCH_MOVIES_FAILURE, error})\r\nexport type searchMoviesFailureActionType = {\r\n    type: typeof SEARCH_MOVIES_FAILURE,\r\n    error: string\r\n}\r\n\r\n\r\nexport const searchMoviesRequest = () : searchMoviesRequestActionType => ({type: SEARCH_MOVIES_REQUEST})\r\nexport type searchMoviesRequestActionType = {\r\n    type: typeof SEARCH_MOVIES_REQUEST,\r\n}\r\n\r\nexport const initialState = {\r\n    loading: true,\r\n    movies:[],\r\n    errorMessage: null as null | string\r\n};\r\n\r\nexport type ActionsTypes = searchMoviesRequestActionType | searchMoviesSuccessActionType | searchMoviesFailureActionType\r\n\r\n\r\n\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const AppReducer = (state:initialStateType = initialState, action:ActionsTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                errorMessage: null\r\n            };\r\n        case SEARCH_MOVIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movies: action.payload\r\n            };\r\n        case SEARCH_MOVIES_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMessage: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, {useEffect} from \"react\";\nimport \"../App.css\";\nimport {Header} from \"./Header/Header\";\nimport {Search} from \"./Search/Search\";\nimport Movie from \"./Movie/Movie\";\nimport {\n    searchMoviesFailure,\n    searchMoviesRequest,\n    searchMoviesSuccess\n} from \"../appReducer/AppReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../Store/Store\";\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\n\nconst App = () => {\n    let loading = useSelector((state: AppStoreType) => state.app.loading)\n    let errorMessage = useSelector((state: AppStoreType) => state.app.errorMessage)\n    let movies = useSelector((state: AppStoreType) => state.app.movies)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n\n        fetch(MOVIE_API_URL)\n            .then(response => response.json())\n            .then(jsonResponse => {\n                dispatch(searchMoviesSuccess(jsonResponse.Search));\n            });\n    }, []);\n\n    const search = (searchValue: string) => {\n        dispatch(searchMoviesRequest());\n\n        fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n            .then(response => response.json())\n            .then(jsonResponse => {\n                if (jsonResponse.Response === \"True\") {\n                    dispatch(searchMoviesSuccess(jsonResponse.Search));\n                } else {\n                    dispatch(searchMoviesFailure(jsonResponse.Error));\n                }\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Search search={search} />\n            <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n            <div className=\"movies\">\n                {loading && !errorMessage ? (\n                    <span>loading... </span>\n                ) : errorMessage ? (\n                    <div className=\"errorMessage\">{errorMessage}</div>\n                ) : (movies.map((movie:any, index:any) => (\n                        <Movie key={`${index}-${movie.Title}`} movie={movie} />\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {AppReducer} from \"../appReducer/AppReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    app: AppReducer,\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof store.getState>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from \"react-redux\";\nimport store from \"./Store/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}